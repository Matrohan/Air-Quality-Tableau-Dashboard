<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <_.fcp.DashboardExportButton.true...DashboardExportButton />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='data(Cleaned) (2)' inline='true' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data(Cleaned)' name='textscan.11c5roo137golv13kd74z0kl3dbx'>
            <connection class='textscan' directory='C:/Users/Asus/OneDrive/Desktop' filename='data(Cleaned).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11c5roo137golv13kd74z0kl3dbx' name='data(Cleaned).csv' table='[data(Cleaned)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='stn_code' ordinal='0' />
            <column datatype='date' date-parse-format='dd-MM-yyyy|#|#|MMMM - &apos;M&apos;ddyyyy' name='sampling_date' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='string' name='agency' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='real' name='so2' ordinal='6' />
            <column datatype='real' name='no2' ordinal='7' />
            <column datatype='integer' name='rspm' ordinal='8' />
            <column datatype='integer' name='spm' ordinal='9' />
            <column datatype='string' name='location_monitoring_station' ordinal='10' />
            <column datatype='string' name='pm2_5' ordinal='11' />
            <column datatype='date' name='date' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11c5roo137golv13kd74z0kl3dbx' name='data(Cleaned).csv' table='[data(Cleaned)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='stn_code' ordinal='0' />
            <column datatype='date' date-parse-format='dd-MM-yyyy|#|#|MMMM - &apos;M&apos;ddyyyy' name='sampling_date' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='string' name='agency' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='real' name='so2' ordinal='6' />
            <column datatype='real' name='no2' ordinal='7' />
            <column datatype='integer' name='rspm' ordinal='8' />
            <column datatype='integer' name='spm' ordinal='9' />
            <column datatype='string' name='location_monitoring_station' ordinal='10' />
            <column datatype='string' name='pm2_5' ordinal='11' />
            <column datatype='date' name='date' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stn_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stn_code]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>stn_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sampling_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[sampling_date]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>sampling_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>agency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[agency]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>agency</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>so2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[so2]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>so2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no2]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>no2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rspm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rspm]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>rspm</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>spm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[spm]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>spm</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_monitoring_station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_monitoring_station]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>location_monitoring_station</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pm2_5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pm2_5]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>pm2_5</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data(Cleaned).csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Air Quality No2' datatype='string' name='[Calculation_526076779640336385]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [no2] &gt; 600 THEN &quot;Poor&quot;&#13;&#10;ELSE &quot;Good&quot;&#13;&#10;END' />
      </column>
      <column caption='Air Quality So2' datatype='string' name='[Calculation_526076779641311235]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [so2] &lt; 100 THEN &quot;Good&quot;&#13;&#10;ELSEIF [so2] &gt; 100 THEN &quot;Poor&quot;&#13;&#10;ELSEIF [so2] &gt; 200 THEN &quot;Very Poor&quot;&#13;&#10;ELSEIF [so2] &gt; 500 THEN &quot;Extremely Poor&quot;&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data(Cleaned).csv' datatype='table' name='[__tableau_internal_object_id__].[data(Cleaned).csv_D63AD2D13BB6466E85DFA1554BED00F1]' role='measure' type='quantitative' />
      <column caption='Agency' datatype='string' name='[agency]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='City' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Location Monitoring Station' datatype='string' name='[location_monitoring_station]' role='dimension' type='nominal' />
      <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
      <column caption='Pm2 5' datatype='string' name='[pm2_5]' role='dimension' type='nominal' />
      <column caption='Rspm' datatype='integer' name='[rspm]' role='measure' type='quantitative' />
      <column caption='Sampling Date' datatype='date' name='[sampling_date]' role='dimension' type='ordinal' />
      <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
      <column caption='Spm' datatype='integer' name='[spm]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Stn Code' datatype='integer' name='[stn_code]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[no2]' derivation='Sum' name='[sum:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Sum' name='[sum:so2:qk]' pivot='key' type='quantitative' />
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State, City'>
          <field>[state]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[sum:no2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[sum:so2:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Khanna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gobindgarh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mathura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Khurja&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Singhbhum&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guwahati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gwalior&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Navi Mumbai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yamunanagar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jharia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bareilly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='stn_code' />
        <field-sort-custom-order field='sampling_date' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='location' />
        <field-sort-custom-order field='agency' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='so2' />
        <field-sort-custom-order field='no2' />
        <field-sort-custom-order field='rspm' />
        <field-sort-custom-order field='spm' />
        <field-sort-custom-order field='location_monitoring_station' />
        <field-sort-custom-order field='pm2_5' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_526076779640205312' />
        <field-sort-custom-order field='Calculation_526076779640336385' />
        <field-sort-custom-order field='Calculation_526076779641311235' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data(Cleaned).csv' id='data(Cleaned).csv_D63AD2D13BB6466E85DFA1554BED00F1'>
            <properties context=''>
              <relation connection='textscan.11c5roo137golv13kd74z0kl3dbx' name='data(Cleaned).csv' table='[data(Cleaned)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='stn_code' ordinal='0' />
                  <column datatype='date' date-parse-format='dd-MM-yyyy|#|#|MMMM - &apos;M&apos;ddyyyy' name='sampling_date' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='string' name='location' ordinal='3' />
                  <column datatype='string' name='agency' ordinal='4' />
                  <column datatype='string' name='type' ordinal='5' />
                  <column datatype='real' name='so2' ordinal='6' />
                  <column datatype='real' name='no2' ordinal='7' />
                  <column datatype='integer' name='rspm' ordinal='8' />
                  <column datatype='integer' name='spm' ordinal='9' />
                  <column datatype='string' name='location_monitoring_station' ordinal='10' />
                  <column datatype='string' name='pm2_5' ordinal='11' />
                  <column datatype='date' name='date' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_2E48E821373A493390003194964F3434]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Air Quality Dashboard' type='sheet' worksheet='Sheet 6' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Air Quality Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_81905B583CB142C291A0B4898A12AFD2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Air Quality Dashboard' type='sheet' worksheet='Yearly Average of So2 &amp; No2 Between 1987-2000' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Air Quality Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_7DFDE3AD896F4692A1902B68C2A766AA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Air Quality Dashboard' type='sheet' worksheet='Yearly Average of So2 &amp; No2 Between 2001-2015' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Air Quality Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_07F4AF48C7F54CCAA865D23713515DFF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Air Quality Dashboard' type='sheet' worksheet='Avg so2 and no2 ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Air Quality Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_3CFCF36F91DE4941AAEEBD86278D66CE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Air Quality Dashboard' type='sheet' worksheet='Average rspm  for top 20 Cities' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Air Quality Dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_CACED10D96B349509A486C1FF1DA6074]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Air Quality Dashboard' type='sheet' worksheet='AreaWise Avg Level for So2 and No2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Air Quality Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AreaWise Avg Level for So2 and No2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data(Cleaned) (2)' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' />
          </datasources>
          <datasource-dependencies datasource='federated.0ugy6ax1ab8bf510fgkwm1hf7814'>
            <column caption='City' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[no2]' derivation='Sum' name='[sum:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Sum' name='[sum:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2E48E821373A493390003194964F3434]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[location]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='604' />
                <format attr='maxwidth' value='604' />
                <format attr='minheight' value='140' />
                <format attr='maxheight' value='140' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[sum:no2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e799b3' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[sum:so2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:type:nk]</rows>
        <cols>([federated.0ugy6ax1ab8bf510fgkwm1hf7814].[sum:no2:qk] + [federated.0ugy6ax1ab8bf510fgkwm1hf7814].[sum:so2:qk])</cols>
      </table>
      <simple-id uuid='{06D37866-E79A-4566-B5CE-A29BE94F8F27}' />
    </worksheet>
    <worksheet name='Average rspm  for top 20 Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='data(Cleaned) (2)' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' />
          </datasources>
          <datasource-dependencies datasource='federated.0ugy6ax1ab8bf510fgkwm1hf7814'>
            <column-instance column='[rspm]' derivation='Avg' name='[avg:rspm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rspm]' derivation='CountD' name='[ctd:rspm:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Rspm' datatype='integer' name='[rspm]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2E48E821373A493390003194964F3434]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[location]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:rspm:qk]' included-values='in-range'>
            <min>32.0</min>
            <max>250.0</max>
          </filter>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([rspm])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]</column>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:rspm:qk]</column>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]' />
              <size column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:rspm:qk]' />
              <text column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[ctd:rspm:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:state:nk] / [federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{23A1F69C-A522-4DC4-9210-3EF4AD87F055}' />
    </worksheet>
    <worksheet name='Avg so2 and no2 '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average SPM level in Air</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data(Cleaned) (2)' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ugy6ax1ab8bf510fgkwm1hf7814'>
            <column-instance column='[spm]' derivation='Avg' name='[avg:spm:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Spm' datatype='integer' name='[spm]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2E48E821373A493390003194964F3434]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[location]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:spm:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:spm:qk]</column>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:spm:qk]' />
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:spm:qk]' />
              <text column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{311A2C15-4B67-4BD8-82D3-0E396D925E09}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average So2 and No2 level all over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data(Cleaned) (2)' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ugy6ax1ab8bf510fgkwm1hf7814'>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='City' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Latitude (generated)]' included-values='in-range'>
            <min>10.5502</min>
            <max>33.6619</max>
          </filter>
          <filter class='quantitative' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Longitude (generated)]' included-values='in-range'>
            <min>72.0</min>
            <max>94.9823</max>
          </filter>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</column>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Latitude (generated)]</column>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]' />
              <size column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk]' />
              <lod column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:state:nk]' />
              <lod column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Latitude (generated)]</rows>
        <cols>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9853CF37-6097-4D89-A377-604F52425BFF}' />
    </worksheet>
    <worksheet name='Yearly Average of So2 &amp; No2 Between 1987-2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='data(Cleaned) (2)' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' />
          </datasources>
          <datasource-dependencies datasource='federated.0ugy6ax1ab8bf510fgkwm1hf7814'>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='City' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2E48E821373A493390003194964F3434]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[location]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='1987' />
              <groupfilter function='member' level='[yr:date:ok]' member='1988' />
              <groupfilter function='member' level='[yr:date:ok]' member='1989' />
              <groupfilter function='member' level='[yr:date:ok]' member='1990' />
              <groupfilter function='member' level='[yr:date:ok]' member='1991' />
              <groupfilter function='member' level='[yr:date:ok]' member='1992' />
              <groupfilter function='member' level='[yr:date:ok]' member='1993' />
              <groupfilter function='member' level='[yr:date:ok]' member='1994' />
              <groupfilter function='member' level='[yr:date:ok]' member='1995' />
              <groupfilter function='member' level='[yr:date:ok]' member='1996' />
              <groupfilter function='member' level='[yr:date:ok]' member='1997' />
              <groupfilter function='member' level='[yr:date:ok]' member='1998' />
              <groupfilter function='member' level='[yr:date:ok]' member='1999' />
              <groupfilter function='member' level='[yr:date:ok]' member='2000' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</column>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk] + [federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk])</rows>
        <cols>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{EDBBBCD3-D570-43B2-905C-E6022FE9DBD1}' />
    </worksheet>
    <worksheet name='Yearly Average of So2 &amp; No2 Between 2001-2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='data(Cleaned) (2)' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' />
          </datasources>
          <datasource-dependencies datasource='federated.0ugy6ax1ab8bf510fgkwm1hf7814'>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='City' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2E48E821373A493390003194964F3434]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[location]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</column>
            <column>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk] + [federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk])</rows>
        <cols>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{66D0E9AA-AEC5-4D2B-A452-F14841A00D62}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Air Quality Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='data(Cleaned) (2)' name='federated.0ugy6ax1ab8bf510fgkwm1hf7814' />
      </datasources>
      <datasource-dependencies datasource='federated.0ugy6ax1ab8bf510fgkwm1hf7814'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97992' id='27' param='vert' type-v2='layout-flow' w='99018' x='491' y='1004'>
            <zone h='6274' id='28' type-v2='title' w='99018' x='491' y='1004'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91718' id='13' param='horz' type-v2='layout-flow' w='99018' x='491' y='7278'>
              <zone h='91718' id='10' param='horz' type-v2='layout-flow' w='90787' x='491' y='7278'>
                <zone h='91718' id='7' param='horz' type-v2='layout-flow' w='90787' x='491' y='7278'>
                  <zone h='91718' id='5' type-v2='layout-basic' w='90787' x='491' y='7278' />
                </zone>
              </zone>
              <zone fixed-size='134' h='91718' id='12' is-fixed='true' param='vert' type-v2='layout-flow' w='8231' x='91278' y='7278'>
                <zone fixed-size='541' h='68884' id='24' is-fixed='true' name='Sheet 6' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]' type-v2='filter' w='8231' x='91278' y='7278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='20577' id='11' name='Yearly Average of So2 &amp; No2 Between 1987-2000' w='37838' x='676' y='7654' />
        <zone h='19448' id='15' name='Yearly Average of So2 &amp; No2 Between 2001-2015' w='37838' x='553' y='29486' />
        <zone h='47679' id='16' name='Avg so2 and no2 ' w='40663' x='307' y='50314' />
        <zone h='46424' id='18' name='Average rspm  for top 20 Cities' w='32371' x='33108' y='51066' />
        <zone h='47428' id='22' name='AreaWise Avg Level for So2 and No2' w='28993' x='62039' y='50439' />
        <zone h='43162' id='23' name='Sheet 6' w='52027' x='38943' y='7026' />
        <zone h='5395' id='25' type-v2='dashboard-object' w='7432' x='91769' y='90966'>
          <button _.fcp.DashboardExportButton.true...button-click-action-metadata='pdf' action='' button-type='text'>
            <_.fcp.DashboardExportButton.true...export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{45B49354-6BC5-4865-A53D-2F94995224D6}&quot;</_.fcp.DashboardExportButton.true...export-button-action>
            <button-visual-state>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones />
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{45B49354-6BC5-4865-A53D-2F94995224D6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Avg so2 and no2 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:spm:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hou71g1876kft19m999o1pcylbg].[avg:no2:qk]</field>
            <field>[federated.0hou71g1876kft19m999o1pcylbg].[avg:spm:qk]</field>
            <field>[federated.0hou71g1876kft19m999o1pcylbg].[none:location:nk]</field>
            <field>[federated.0hou71g1876kft19m999o1pcylbg].[none:spm:ok]</field>
            <field>[federated.0hou71g1876kft19m999o1pcylbg].[none:state:nk]</field>
            <field>[federated.0hou71g1876kft19m999o1pcylbg].[sum:so2:qk]</field>
            <field>[federated.0hou71g1876kft19m999o1pcylbg].[yr:date:ok]</field>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:spm:qk]</field>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B16CC05D-3BA4-4F75-9363-52321BD1167A}' />
    </window>
    <window class='worksheet' name='Yearly Average of So2 &amp; No2 Between 1987-2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F7497C2-25C8-4B55-8E1F-89B0663288FB}' />
    </window>
    <window class='worksheet' name='Yearly Average of So2 &amp; No2 Between 2001-2015'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29087855-9BA0-4A94-A581-D9AB5BF3D53A}' />
    </window>
    <window class='worksheet' name='Average rspm  for top 20 Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:rspm:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:rspm:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]</field>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7AE449A-1889-4F3D-8B65-C51FC59D4413}' />
    </window>
    <window class='worksheet' name='AreaWise Avg Level for So2 and No2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BD626D0-ED76-4E87-A006-96125A4F7A2A}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]</field>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]</field>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:state:nk]</field>
            <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{700C3AFC-575A-4E4F-9DB6-688A6E469B97}' />
    </window>
    <window class='dashboard' maximized='true' name='Air Quality Dashboard'>
      <viewpoints>
        <viewpoint name='AreaWise Avg Level for So2 and No2' />
        <viewpoint name='Average rspm  for top 20 Cities' />
        <viewpoint name='Avg so2 and no2 ' />
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk]</field>
                    <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:so2:qk]</field>
                    <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:location:nk]</field>
                    <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[none:state:nk]</field>
                    <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Latitude (generated)]</field>
                    <field>[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>38.604166666666622</value>
                  <value>14.296502976183039</value>
                  <value>&quot;Raipur&quot;</value>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>21.5</value>
                  <value>82.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.0ugy6ax1ab8bf510fgkwm1hf7814].[avg:no2:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Yearly Average of So2 &amp; No2 Between 1987-2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Yearly Average of So2 &amp; No2 Between 2001-2015'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='28' />
      <device-preview visible='true'>
        <device name='iPad Pro 12.9-inch' type='Desktop' />
      </device-preview>
      <simple-id uuid='{5837EC63-2F0A-4DB6-B3FB-3F2F864CBD1E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Air Quality Dashboard' width='192'>
      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
      Pl/XMcylebL6/s2g59Z13rh0GaNkTLnMsNI00TR9haGlYRiY5qr2mQaaphfeiWWh69qK9/PL
      V39B+/7D6LkkpsXi/YXnRuYmlyvCTP7pn37E1772VbqvvY5391l21/sf2wlTS9HRPcCnn3+y
      zFWLn/zwL7E3HOazF8+9q0HaLIxsnNv3xvjcS08D0HXjCobNi6nrHDl2HNcyHUYqEuTu0Dh2
      0SCHm6dOHwV0Xv3Zz6mt9YN3J6cP7wLgp3/7PZxtZ3j5wnFe/cWrfO6zn1tR7/TYMDMLSdR4
      iMr2kxxoqWGk803uRly0VSkspHVeePr8inuuv3Ods+fPb5EOweLqG6/w+u1B/uP/+j+RCI5x
      o38Kt5DFv+MgcnKSsCpjpcPU7TmJmJknndO4cfVtvvKtf0O1R8E0NO7cvoXN4WJyLsKnP3Wc
      X751kwqvTMWOQwSsCANTcbRUhHPPvcxw51VMu4fwQoLPfPr5zfXDspiJZjnVFmAslCJ6/x3q
      j3wKK9hPRK4nPNpLoKqSjG7DrS8wNLdAZV07+3b4iMTTzIRiPHf2EK9d7aK1wc9MXGBnhUBC
      EwkF5/nMZz6NIonYJIvx6Tn2tbYiWCqvvvo69Q31pDWRC+dOLBGAIEg8ebSF6z33CUVMvljn
      486NqxiWgK92Jw1+maGH08QSaZ67+BTXLr/N+Ng4n/5iQQ96+c1fce7Z5wk96EKt2MuuOg+G
      mkIOtJCLzmJhceXtK3zqmae5d/s6TQeO0tdxG7DYc/QMo/2dxOdnaDnyFHoiSDqTpmrHXupc
      Oh19oyh6np1Hz5CYHiSjmtg8lRw/tBfLMrh57SqCYsNT0YBLDTI1Pc34TIjWpjrmgvOce+E0
      FW4nAhadN6+hCzKKK8Dxw/t48mwd0bmHXOkp2icJ5FWNSp+HqLDEIboqmxFTMyTyRwrvz1C5
      cuUadrtCVdMedrfuoanF4kHH2yyksqX72vcd4nCjjZ++8iZaJsa1W3cxDY3jp07R1d2FYrNR
      51eIKU3Y4iPM5mycbffTH7YhJsbRLAFHoJ6WgETP8AxaXuWZZ57i5z/5Ec0tbWR0kQtnC5rq
      k08+RzBesMYdHhjgyOlPU+8y+Mm/vMbOahf1Ow9hhPNkcxpP7DuInk8wMj5HtUcBQJQUzpx7
      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
    </thumbnail>
    <thumbnail height='192' name='AreaWise Avg Level for So2 and No2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average rspm  for top 20 Cities' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5Qd133n+anwcuycczeARiM0MkAQFEVRkiXRGkseeyR7bI/Hx2fHXmnX
      Z2fXPuvds/bunPGujtdH3vWKM7JmJFGiEkVJDKIYQAJgRGqgc87xdffL+dV7FfaPhkBQ6CZB
      qoEG2PU5p/6o7qq6t+rVt+69v9/v/q5gGIaBick2RdzqCpiYbCWmAEy2NaYATNA0DUVRtroa
      W4IpABMKhQKZTGarq7ElmAIw2daYAjDZ1pgCMNnWmAIw2daYAjDZ1pgCMNnWmAIw2dbIN+4o
      irJt7cHbmUKhQD6f3+pqbAnvEIAsyzidzq2qi8kWoSgKgiBsy9/+HQKQJAlJkq7vG7pGNpsD
      ScZukShoYLOunaJr6jv2bxWtkEdDwmqR3vvgddDVAqohfuDzbwnDIJ9X0HQDSbZgkSUEQXjH
      IVqhgCBbEIUNrnEPYRgGmqZhs9m2uip3jEKhQDab3XgMYGhZXnziMX78zC944efnmJp6na9/
      98z1/0cmzvHo989tWIARmeBn5/oBSC2Pc/p8Pzowdf4Znnx9+ANXfPrCT3js5YEPfP4tUUjz
      82efpquri1deeImVjHrTIZHlRbLa7a3GdkUbW0QdXUAdXUAPRDb9+oZhcPbsWb73ve+x4ec7
      OtvHYLKI//5PPocswvL4WWKBKZ5+4jtkPbt4uBmigSme+uG3KZTs4V/cV89zz75MNJ1j36lP
      o/Y+xY/PRpH1JI5AF09cXiGZyXGqphp/ws5c/1uc6R7HV9zMb3zqGH1nf8FIIIdmyPzuv/o0
      F196hsXVFJX7PsKpJo2nXpvFkg5S7FUIrwzzw+9cwd18lEfu37PpDwjAU9HAqVPHyS1007OS
      xe0NcKlnFMPi4ejxwyRCcRx1MNF7gcVYlgIOTp48wtLIEBW79qIt9RH17EYMjJPQ0+CqY09T
      xW2p64cNPRCFa9NUdN1ArCre1OsLgsAnPvEJNE3buAVIxldxeyuQbzjC7qvk059/mP7XLwDg
      8FfyyGc+wsDlLgzJQW1tDX5Lhpde7eLw8RM07jnJbz50HwcOd9J+8CS/9bEjZCPLzKzEGbpy
      CVvVTu4/2kE6MMTro1m+8MXfITDShSbJVFbXUV5m56VfnCafiXLx/FVaj5yiymfHUVzPI5++
      n+6Llzb1wdxIOrRIV1cXlyeTtFU6ka1OSoqL0SNzTIcyxEMh8kA6q7Dv2AMcqpPon44QD4dQ
      dcgnQyQUndDSDLqnlvbG8ttWV5P3TywW42tf+9rGAvAX1xAPz5HX3/6b3enEIovX1Wl3OJEl
      EQGDpd4zXAoYHDqwH4flvSvw0d/9Y9rdGb7x9X9mIZJAtvmwyhKiIJAI9HP64gJ7jx6k1Cph
      AKX1u9i/qwGrLOF0uRBEEbh9k9lsnmK8UpaspYQih8jk0DDuynpam8oo3PBQZNmKRZawuxzo
      qn7TdezOYhrrK5GED8Fg4UOE3+/ny1/+8sZdIG/9Pu6vG+a/fvNbeGwlnDhZjN0OIOJ02hEk
      C3YbgITDYcdVXEHkzHkuKW4MoQ4qd1IS+s88e7aCTxxuQ1r9Lk+fKeOox4rdIjN46SwDcwkc
      LjfltXvxnvtnHvuRwlJcxer0UYhMc/68hiJKiKKMy2lHACR57XxBEHGsVWjzEQQcLg9tnYfw
      jHVzoX+GcpvASH8vUmaVsgMHkS0WRCATW+bVV15C1y089IkOArlRXn/lJYjP0/TRU0gWC+a7
      //4Qmyquf2QF1+b/xpqm8aMf/YiFhQWEu2FOcD6TZGxiEouk8tPTvfzVX/zJPeOhG+w6T0Pn
      Cdzvzxh2V5HL5chmsxQVFW11Ve447xBAPp8nl8vd8UoYWoHp8SFWY3mad++l3Hubvuy3gVQ8
      ht3rR76Hv/L5fJ58Po/b7d7qqtxx3iEAVVW3rUdwO5PP51EUBY/Hs9VVuePc5AmW5Xu4LTf5
      QIiiiGEYpif4RnIrI/wv/+d/oePAbpIJjd/9439DlftG847KD7/+j+z61J9y9lt/z+//z39L
      +TWv8ONf+T848Kf/no5i1+2u/+0hn+LJnz2Ft6iMfF7k+EcfpNT1TtPW7NXTFBo/jhHowt/Q
      Sdm1QUB0eQHVVUqZ597pxt1tvBZ4CcNYs6hVOKvZ5d+36WU899xznD9/fmMBAJQ17OP3/ugP
      CV15hid+foE/frCa0+cuokhePvPZT7x9oKbQ88ZpluZifOLzv03rnk7ctzNU4Q7gq27l46eO
      o2VXOHN5gAePttB3tYe4auXgkUPXj9MLOUZ6LtKdzXPw5Cm0Qg7BuIcHBHcBV0Pn0Yw1N/tu
      //7bIoBQKMRDDz10a8aWooZ6UvMzvPjTJ8jZy5BWuniua+HtAwyD5gMP0OQI0TcdZHZ4kKhS
      2PRKbwWSowKbEGdxpJuo4cIrRLk8MP/2AQZUtezhVGcFk7MxkrEQqdzNoRMmdxcnTpxA1/Vb
      E0B0dhZPfRXhaI6qmioOf+oP+I19N7j1ZTtelw1RFNC33qq6qei5VQr4yaSzFJeXU92yn8O7
      qq7/X7Ta8XlcyFYb4ofr1j+0GIZBS0sLDz/88Lt1gQTC8/18/zvfJpcy+Fd/9BlivSmeOPMy
      S3WV7D/xIKIoIgCiKCEAgiAiCiCI4k3Rk/cWAonAJC+9lEQ3ZI48cD+WuJuzF7oJuRw0th/C
      JgjXHFwCwrVzBGEtzuRevvO7gcNl918fA5Q7qt7j6PePrus8+eSTTE9P3x2OMJOtZTs7wt7R
      AmznmUHbmV/6AdLp9FZX5Y7zDgEYhoGu3xzQZfLhRtf1bfvbv0MAVqsVq9W6VXUx2SJyuRyi
      KG5LT/CGViBldZyvPvoDFCA5f4GvfvOFO1itrSUbXeC1S4MYBiwPdzGyktrqKm0rgoOLrA6s
      bWru9pjTl5aW+Mu//MuNrUCGoaEoBQzA0FWUvEo6PM/Lr7xBLC/y8c9+jujQGyh2PzMrMazp
      FB/7rc8SHbtEQKxFDPQwMBumetdhTra5OX1hFFmJoLgb+cypdt48c5r5YIrdJz7Joba7a6aU
      w19FkTHNYjjIbFzi+E4n86M9jMyFqGreze7mEga7egjHk/irasiEA1hKmznQXMrMcpTWxjrG
      xkZobmxibKSPaCSBo7KNzh01jHafZzFaoGXvARpdOa5MBEmEVqnd1UlruY0rl6+QKIjsPXiU
      EluBvu5uwmmVutYOGooErlztQ5G8HD9+CCU0TTRrkMhJ7NvddM9E0L4XwYFFDH3NNuOt8SPb
      b2GCyftEURQ+//nPv/szC8728YPvfpcnnj5LHhBkG807d1MrBnjylQHmRi5xrmuCXTvakSLD
      XJ6KcPnCZWxuJ77yOva2N/L6Mz9jNRrkQu8Mpz75GSbOvUAMkcr6Vjp2lPLDHz696Tf3ayNI
      tO1speu1N2nYsRNJAIvLR1NjPbOjvWQLBVbCCvedPMjC1CL7jj9ANrKAls+yvBoCYHFxAU1V
      WQ4lOHTfAxQisyiagctfQUNtEUM9I2i5KMtZO6fuP0RgYR7DgJLKGqr8NgaGxpge7cNZt4cH
      7mslMBMGQaKitoFyAnTPpogFppgKa7TvaPjQvPx3iqamJux2+7s/t7KGfXzxD/6A3/0XH8UK
      jF46Q/d0kKLiYvJKHrBw4L5T7G6q4sTDD3L5xWcJGSW0uJM8+fPX0SUbXocFVQOXx49NlhAF
      iCwO8vIbAwiOIpzS3ekxtvtLqPD7KPI60dQcE+PTGIIE6Oi6jsdXhFWWcHv82K0yFsv6jamv
      uAS71YLNJmOkAozMxxAtFgQljwaUlJdjkWWsskx4cYbVeBbJYkMtZMlrUFbku+5nCcyMEc9q
      OJxO0pkMst3Frp07sMnm6/9BeV+hn7IAK4vz+N0xsAGCiCStPXxv7T6sKz/A9/H/Bocsk09H
      mJtfIJm92awqSRKJ0DIL81ay6t3rhhCEt1+sXDrB0tIS8dTG8yVkq41McJZz5+JMr6S47+Yr
      kooHWZRsZPI3u8sEdCLBIDlZIy/6KS/2ceHVl3HY8+TFFnRdJbS6REYNY1SvnfFhdLu1fubt
      2B/ZsflGGV3XOXPmDGfOnNnYEWYYOqqqI1tk0DVUHWQR8vkCkixjICCigygjiQL5TIwffPNb
      PPgHX6bBJ1HI59EREAUBSZLQNB1ZllBVFVmWKeTzIEoIGFgsm9/H+/Ux0DQdUZQAA11T0Yy1
      0GFJFNF1A0kU0HQDURLRNQ1JFNF+5TjDMBBFEV3XEAQRTS1gICKKwrXQEQFJAM0wEAVQCyqI
      ay1lNhkhrUpoiWmm4+Xct7+GgqqufXQECQEdBOnXzk203RxhhmGQz+fRNO3mCTGq+sECuSZ7
      z5PxNLO3+e4a0N7L5NNR+geG0W3FdO7fheU2fewVRUFRFLxe7+0p4C7mHQJQFIVsNruV9THZ
      An4ZAeBy3aPzN34NzFggk23XBbqR9zQf/Od/+ArBVJSv/dOj3Mp0+dWxN/jmU29c29N47gdf
      p28+8b4rdubH3+DSVOh9n7eZDF16g/lYhivdV2/tBC3P1PQcZsbEX4988AzK6ssoqy+jJgZv
      Sxnnzp3jK1/5yntbgZLxOLquEw0FeOOlZ0joJTzy8HEG3nqeodk4rQdPcbRO4KW+MN78MpKs
      kszYyQbHOT9dIJuMM957nr5XY3z0s7+FJTzK2bf6sZY28BsP3ceVl59HLrIzs5TnU5/+OEJ0
      kufOXGFiaJwH929tbEpeyaFqBtl0nL5Lr5MQijh6sIPYwgh9YwtUNHXQ0VLM4myEdGwOf/0e
      NEFAMgqM9FxhPpJjd+dhakq2X7aFX4fc4hNgrI1FLUUnkL0dm17G4cOHeeCBB27df6IVVPae
      /ARLV0+zms3jL2/gSGczL/30SRLhAD/92TPExCL8TplUcJr/8t0X6OhoBU3FXdPOwfIUp7tm
      Ea0eDhw9QvjKaboX41w68xK+nSfwhEboWwrwja9/n4/85r+ks/XuGUyr2SzV7Ucos2cIRrMI
      Fhe72ncRGu8hWsjTe/ESctkOKl06MwsB0DWcxdXsaq6mp7d/q6tvsg4ul4uxsbH3EoCGhoSE
      gNXlx+uyIwmg5pZ56mevsJJIIRk6ug7e2t18+sFjeB0WsvEgCd2Bxy6CbKXU70WWJXStwIXT
      zzEwvYQoyxQKOqLsprjIiSSI6EaciOKn2mtFugvyjhuShFUSsXmLKfXYsTkcCCiMD08QicUp
      qGkUBUpr22iufjuBqxJbZWJ+iXgiTXoL8iyZvDf9/f10dXVt3AVanuzjUu8ArtbjeG56GXUy
      mTTZdJa8ttbjtdyQTqWs9SifrAnxrZ+8ya+mhC0oGdKZLNmcsk6pJeyvzfH4U78gOBfh8IkP
      eHe/JunQPL1jMySyVna5bcy9478aipJHzKTJ5tacfKIocqM/StdV8rksabFAfp18oSbvjqXo
      KFybFC+5Wzb9+pqm8fTTT1NeXr6xFaiQS5NIK7h9PqySQDqdweV2k00lsTld5FJxCshYRBGH
      3UJa0fG47GgFhZwKTptEMqVgkUG2OhA0hTwWLEaeZEbBZrVgsTspZNPYPR7UTBrBakfS88RS
      WSwWC3aHE6t857NLaAWFdFbB5nBhs0jk83msViuaWgBRRstnyRV0bFYZ2WJFU3UsVhnB0FEK
      KjaLTCadRhdkZFnCbru7Q8y3mxXIMAxisRi5XM40g5psPwHciBlFZbKtMQVgsq0xE4GuRyHD
      Cy+8gGjzoBtWTj50Co/l1r8VC5NjOMrrKbmWHjEZXiIj+Ki4V1NF3mHmuyevT4ipbK/D6tz8
      xfvOnz/Pm2++aQpgXQwdyV/Nx+8/RmruKoPzSTrL8ly+0ofoq+bIvl2sLM2SDC4RNXwc7tyN
      qMS4cOkq3tpduPNZwpOD9EazHDx+AsmQkK1mY3ur9PzsPLq2Zj178EuP3BYB7Nixg8OHD5td
      oI1QlSyRaISppQRVxQ5UzaC5fR++zBIT4RRTI4P4m/ZTZsmwEk1x/s0L7Dn+AM3lXgw1Q8FW
      zvHOBoaHpkmsLhGMm0GGdxPFxcUsLi6aLcBGKMkIl149jVx7iD0+mZm+SRazElosiDOlYfGU
      UlXkYj7kRDQKaBYPfrsF7BaCsou6qlJkawabZL74dyMjIyO89dZbpgA2wlVaw8P3HWTg8gUG
      pt1ImTwWu38t9+lNhmMrZQ6Ni1e68XpLuRun99xL3PdvP84vrfOuks1P1fJLR1h9fb3pB1gX
      QyedVXA5HRi6SjKdx2kTiMSS2B12rHYXhprH4XBQyCsgWpAFjXA4gsXpxWEREWULkmCg5DUk
      QccQLbd3dftfg+3mBzAMg6WlJVKplCkAk+0ngBsxB8Em2xpTACbbGnMQvA6Z6DwzYSu7Wyvo
      OfsUzj2fYkexTk/fFHsOdGz40HQ1TziRpqx4rSthGDrTg1eYXIqC5Ob4A0dJLczgqWt9j3WF
      VUYHJmnes3NtQG1oDAyNs6dj1/UjBgYH2dOx+RNFtprp/ssMvv7S9f2aHXs58PBnN72caDTK
      448/bgpgPSxWF5HILOhO8lYf2bkAebuLtG4g6XmGe7tJCn4O7t9JJjRH3/AMla0d2KLjPH9p
      jN17OjlyYA+ynmNiJcXHHv44Wl5BlERysh2LrBFcDLCyukTOWsqhjmaUZIjevmEESxF7j+wk
      FYsy0tdFTvBzsKORWGSZ7othrKVNtDdXE4+HGem5SMZSxr7dzSwvzlNbW0csuITkqSATnmNh
      fhF7aQOWzDIpuYT9u5ruinkW70Y2EWd1duL6vqfkVwPqN4dAIEBjY6PZBVoP2eFCzuWIrq5i
      q90D+QCpRAiPt5zZ4X7E4gYqbAmuDk8z3D9B275OPBaoqG+huW0nRzvbsUoCosVGY7GFn//8
      ecYWIwgCzI2MkUFjpLcPb/0unNFpllIZLnb107L3EOLqAkkgl4riqWrDEQuwqhTQ8xqNHQdQ
      FodZiGbIxaN469qRcsuE4zlGR0cAWFkYJ5rVGOrro373fpb7LiJV76CQCJBRzLXLfsnu3bup
      q6szBbAegmil1KszOBOj0ufGIwosrkYorixhOTDH7OQocyGFEr+P5rZaJof6GZ9dQZRkJEnG
      arFcWyJKpK3zJJ/9zMMos1eZDL7tFPMUVVBR4sXvcZLPZnCUVFHqdWKzrXkRHL4Kqsp8+Fwu
      DMDi9lHkdlJfVUwim8dZXEF1iRe324Wg32zI8xSXU+xx4vWUUlbqw+mwI5j2vpswBbAuAr7i
      YgJLy7hcduorZK5Mq5S7JWpqarE5PJSVlmCzGKTSGsUlJaRSMURJRkuGGJtZQNUMDK1A/5WL
      jE5Mk9WtOGzr+wEkuwstukT/0DDTS+tnwtBzCUZHhumbjVJVdPOC1pKeY2R4iPGZlU19Enca
      p6+IyqYd1zd/WeWml2EYBiMjI1y5csX0A2yEVsgRTWQpLikCNUswlqei1Ieha4RWAmQ1kYrK
      CrRMnGA0ia+0Er/TSioWIpo1qK4sQxQgFQsRSWRweosp9bvJJJLYfG7yqSx2tws1kwKrg3ho
      mXSuwFj3IMd+69PI6QwOtws1nQaHAyUeJpLI4Ckqo8jrJJ1K4Xa7yeUySLIdNRNlNZbF43Hh
      8vhQcxmcLheZRBK7z4uSSWOzO9cdA2w3P4BhGExPTxMOh00B3BUYGrOj/YzNhyhv2MW+tpo7
      usrmdhPAjbxDAJlMhkTi/SexMrm3UVWVQqGAw+HY6qrcccwWwGRbtwAbDoLz0QW++nf/ga6Z
      CGAw+vpP+N+/+g2iG6S50fIZfvT9HxKY7eGps93vqxLZ6CJf++pXeOw7j/HDp86i3EImkVxy
      ie//5MV3PUZJL/O9Hz//vuqyhkFseYbXzr7C6VdeYXwhcovnaUz095JSYW5yEmUd64zJexNe
      vERo8QKhxQskIxPvfcL7xDAM3nrrLf7hH/5hY0eYnk9RQKPr6giH6g4xNDhLOJwgr2mMXr3I
      1GqaXQeO0lThZWG0h77xJbqHJzmyv4zJyQhvGCGKmjuplGIkbBU0lbvo6x2ipbGcrss96M5y
      Thzdj10W0ZQ0abmMP/3Xv88z/+/f0jVzEH8ugFvOIhQ1EZnoYTllsO/wMaqL7Ez0XmJ4eor+
      ySwYGmO9l5iN6hy77ziWXIhLl3uwlrWwv1FibHSUq285UL31HO5ovqVc+pqS5urgNIdPPoDb
      ApmcRjwUwOKrQosvkhT8VPoshGMpXLLKyPgMjrJ62htLSUQilOpgdbuwCJBNBBkenaWsoY3a
      Mi/hcJBCKoFcUkOZZ/t1OW6Fy8//GYa+tnJQddsj7P/o3216Ge3t7Rw5cuTdzaD26l1owRFy
      mRh5ZzFFFoA8gr2CfTsqefLxJ1mZu8LjpwfZt2839mtWvmQiQ+vuRr73re9RSAf4+fNvUIiO
      8uxro6hKnvpd+9Bn3+Dl3qV3lGfoBVYiCk4hyQ8e+zrnLo+gFbLYShrZWWnhh08+z0LfaZ7p
      DrOvow2rAPPdZ7i8aNBWrvL4E2d47RdPopU04xPy5A1QUknKmhp54WdPkr5FR5CSjWL3VOHU
      krz52qtML8fIRBeZXUkwMzvEQP8E2cQicytZlIJKXXMb+dlBAjfk+hoaGkLL57jc1Ud1UyMz
      vZcJZ/J0vXaaQEbAextWPjG5NQRBQBAEHn300fcIhRActLnSdA/3423YhzA9g56K8OxzP6G8
      pIhQOMXM1Ag1bQeoLCvFek0ARZU1VFSUY2g5Klr2I7/wGGdfDnDs4c+yMPwaL/aFkeLzlFa9
      7Rhanerhhz9ycN8f/nva/ToObxX/8otfQA6P8tWfPkdliY1I3M348DS7Ov8NpSUxZBFmxwYY
      mLGgR3y0tB6gs6yYn73wPCOeBr5Ytw9HcQV1VRXIgsatDnck2U5BDSI5i7j/wU7OvLxI6+Fq
      5qbGsIj1eO1RVudSlLceY3noTWajCunVSSwdH3nHddRCGtFRTGVpKXqlh0gmj7e6mQPtzXfU
      ymNyMz6fjy996Uvv7Qg7fLSBJ358lX17qgFQk0EylkoO7t+FXRapqGtjcayLkfFREuvM/hMs
      Pk7sLueZq2GOtPhZXlykac8RmquLufEdKG/u5Iu//0UOtK45PiSrHUkUyIQWEEpb2N/egkUU
      qG9rZ+TKG0xMTJEpQGP7HnxOD4cOH6Kq2EkyCyc/+jDM9bGU+2B9cKvTj0uL0D00wdzsIlgt
      2D1+knNzSMV+mj0il4IC1W6NREagdecOStz2m64jW92ISpjxqSlGl9OUua2Iomi+/O+Bt2Qn
      nmubw1216dfXNI1XX3313R1hej7NYihDbYWLodFl2nfWMDO7SG19AwtjA+RkHy6bhZr6KpYn
      hwkpVtwOmZpyH8EU1FV4mZxaoLWlkUDfy/x0ROLPfuej5FMhhsfmKSkrxuYpo6LIiaZkmF+N
      UV9XjchaasL5pVXqG+oQ9TwjA/2I7jLsNiu11aVMDw+SlVw47E5a6itYmBwlEMtR17ITt5Fk
      fGoei7+KXQ0lzC1GaG6sZHp6nrr6emTp1pzfWiHH4vw8WU2kpq4Bt10isrKMzV+GU8ixGC1Q
      W1FEOhZkcTVOUZEHp68cLR3F4SsmGY9Q5C8in4kzt7CCr6KWMp+TRCKBz+fbzN/z12a7WYEM
      wyAQCDA6Onr7zaDZWIAXXrnA8Y99iir/zV9Jk61nuwngRkxHmInpCNvqSphsLdu5BdiwQ1yI
      L/GNR/8/Hvvud3nqhTdQ3mPhK11VePoHjxP+lXWxk6vjPHvm8mbU9c6i5zj/yhkWY5lbPMEg
      OD9BXIFsOmWuC/BrEEoXrm/J2zSHIZ1O88QTT2xsBtVyCcKKl7/4d1/kuUf/IxcaWqmx5Wlu
      rmdyZJi65jpmppfQMzF0by27G0rxFZVhFQtMDA4QiGZo7TiIJRWhv3+QCkeeqtZ91JVtfp6X
      20EmsopuhdnZVar9jSjJMKvhBKmCQKXPwlIwRfOONvRcAkNTiWSg2OlD1NK8cfoXyBVN7NzR
      jttIMBuIUFnfTKlbZnpigiw2Wpqb0NMJDJvA8mqGlobNt3bcqzw/EuGXTvTmEjunmjbfaDA+
      Pk4ul7uV+QA6qZQC2VV++vPTqMCT3/0O0cQij33nJ9j8bn743e+j5BWunu+ioOXIYqO61MI/
      f/MHACjZPCUlTv7rf/om90qetNWVADU7j6An1mL7V6f7mIkZKIERuqejuOQUo5NBFseu8sbV
      CewOO3NDfSR0C16vl5LScjxWg6v9IxSXFJHP5jCUNKrVg1NLMDS9RGhikHOX+rBtw/V5t5rO
      zk727dv37o6w4GwfP/iBzM5P/Ql7K3Qu/sr/XaVVtDQ1IpPnlyMJJRvnrVdexOYvYTW6CnTg
      Ka2iZUcntcLzxIC7fahlaDlGBsYo+ONEZuep238Ui8VOY3Uz8nwQe2kDFe4YiSkVLC46Dx2g
      wmchBAiyFY/Hi6+sHLfbRkO5l7HRMUpqd+ATMowPTyGqCbQSC6U2mb2HO6l1bX7yV5Nb410F
      UNawjy/+/u9hB3LhWYxcktnpCULJjftlqfACOVcdDx9tpXdiCRBQcwmmh6+w4iyjZJNv4HaQ
      S4bxtBzm5OF21PgUr48usHODlU5FSbrJt2CzwOrKKl65DNFVRMfuSkbGFgkmCtTu2Y8zMs54
      BkDCcpdmi9tK3DYJ/doQyi5v/qRFwzAIBoMsLi5ubAXSckkm5iO0tjUgARgqk4M9BAsuXJJK
      285GZuYi7GqrYXhogpamav6f/+tr/On/9j+w2HOVnKMKt6zQWFPJ1OQEq9Es7QePUO65+792
      +UyMtO6gyG0DNFZXo3gcAoa9BCETQbV5cMoFUmkBSchhcfqwyQKJUBBrUTkWLc342CTeqmZs
      Soj5YJK65jaKHTojQ+PY/SW4PF7caIg+H3Zxa2embjcrkGEYdHV1MT8/v3lm0O5Xn2FWreaz
      HzNzrt9rbDcB3IjpBzDZ1gIwP9Ym2xozM9y6GGRiq/QNDJPKw449h6gvf6f/IjLAvXYAAB2P
      SURBVBeZJyRWUOtfi+vXUqvMpuw0V3o3uGaaqckUzS0Vt1yLwPwkvsoWnNtswYFAYul66LrT
      6sTv2NyWyTAMenp6ePXVV00BrIdeyHKpq4+OY6cocUA0WcAwdMLLi8RzAnX11ajpMNORAkrU
      Qm1dDRaLk2KPjXwuQyqZJBJPUVXfhNMCkZUlIukQgYCDpqYywisLxDIaxWWVFLkkFufnyQt2
      amur0NIpDKtANJYnGV4mq9kwEGlsqEbaJlHUf/XMf4eqr1ka729+kD+//y82vYzy8nL+7M/+
      zOwCrYeSiWLx1FBsyTPQP0g8WyAeGGNgKoiWWeZi9wSGppFKZSikFrncN00hPEnPbJxoYJwr
      fdMIeoIrPZNEF0cYnA4iCaADkflBBmYiiJkVLo8soGUTxHMGudAcI3Mhlgd7eO1qPwVElFSc
      1ViazNIAo6vKe9bb5NYQBAGfz8czzzxjCmA9BEFCNwqIFgf1jX4mBuYILy/S1NHJjo6D6Okl
      kGRqGlvYtWc/QjLE9VApyU7rzl207NiBTcsSDcbY2dlJc3M9dkkgtJRi79H9NNdXIYoC2XSM
      uelJZufnWArGAZHdB47SWFmEzV3Erl072dlUSea9grFM3hd2u53jx4+bAlgPm6sYMbXEeCCK
      iIAgSfhKyliYniK8NIEqFyMYBtlMiqXJUTR3KRu5s2x2kfmZJcKBAClVx+OF6ckAq6ur5FWd
      0NwSzYeOsbOpCgEDkLHbt7dzzG3zXN/s8ubPIdE0je7ubiRJMs2gG6Hm04wNDZMoiOxs34Pf
      KTE3McRKSmTv3nZkJUbf6ARY/expb0XOxwjmnfhkBVWw43FJBFcTlJa4GB8aJGd1U+6voMQn
      MTY8jJJNELY381BHKX29Q7hKyvH4S3BrCnJZKQ5BIBZZxekrR1YiRHQvpe++qMAHZruZQQ3D
      YHx8nIsXL5oCuNOkw/Nc7B5BEyzsPXyMSt/WR0ZtNwHciCkAk20tAHMMYLKtMf0A66EpzCxH
      aKypJDQ3juqrI58MU19bu9U12xZEMxmMa6uR2yQZl23zAyiXl5d59tlnTQGsi1YgsBKixifT
      Mxnh1Ml6ukcXsEsCosNHic9NJhEmksziKyrD65JIxjOkUgns3hKKXDLJVJZUMoHdV0KRy0Ys
      HCSZ0yitqMBhhkC/K3/0vcdQr8VDP9S2k//xoYc3vYyFhQU+97nPmV2gjUiGl3j9fDcdBzqx
      iALR5QWWw1G6r3SRLeisLM2TjEfpvtJDTo/zyi9eIxyNcPVSD0o+xEuvnCccjXL5Ug9qIcvi
      8iqJWJCunqGtvjUT4PDhwzidTrMF2AiL3Yldy6EUVMBCcU0T+/bsYUC9jKarxEIhQjmdcCRG
      Lt9KZeMu9uxpxEh2owLVTbvYs6eGwvleFFUhGlwhU9AIZgVg7xbfnUkoFOJHP/qR2QJshN3l
      59h9xxi/col04VczPMSJ5oq5//hhvLfgtEqsruCs2cmJg7uRMY1u74UsikiCgCQIiLchjaRh
      GLzwwgs88sgjphl0XbQCgXCcqvJSCokVlrJ2bIJCZXk5oeAy3qJyAuPdzCclasp9VNdWEgkq
      VFV5CQWC+MrchKIaVWVuVgNBisv9jHRfIWMppbzYQWNd3Vbf4TvYbmZQTdN47rnnmJ6eNgVg
      sv0EcCNmF8hkW2MKwGRbY1qB1iOf5kzXEA/dd+RdD4usTBHN+UlFp9nZcQC7Ze17sjI/g6O8
      Fq/NfLwfhODLVzCupYazV5fg3dN0W8oZHBw0BbA+Bpr2dvz91Mgotbt2kl1ZIGPxU2zNcfly
      L9FMhtbd96EqaQavnieuSBw5fhRFU3EDseUprg5M4iqt48DencyO9xMPR8haijl6aC+h6X6G
      p1coa2hn745aszm+xupLlzG0Ncub/9CO2yKAVCrFW2+9ZT7zWyGwsIgKZGJhoskc3Ve76Tj2
      AMf270AC9EKByrZO9tTbmQ8kCa4EyBV0BMlOfWMTyZUpVuM5FhcWaDtwHzWOFCsJFYvDQ2NT
      A0uDfSTN+S53DF3XOXfuHA8++KApgA+CJtnxO+S1CRWA7PRQ4nFgsdkRbzCqjY8No+pglSSU
      QgG7pwif04rNZgc1wcjYIgYCVllFKWzd/Ww3MpkMfX19PPXUU2YXaCMSy9OcO5ejuLqVEje8
      duYsSjBI4/Eayu0aL77yKoKapnbn8Q2voeWzBAJLRKNJqtf5fz6TYGlJI5a8V1IG3xmKTnTw
      y9yIjvpbz6Jxq7jdbv76r/8aMOcDrI9hoKoFdAMEUUIWoaBqiKKIKEoIgkGhoF7fBx1BEAED
      wxDA0BFEEUPXUDUdUZQQJRFD15EkCV3XQRAwNBXNAOn6dbfmdrezH+AdAlBVFVW9PQsSmNy9
      KIqCoih4vRvlNPrw8o4ukKZp5HK5raqLyRZRKBQoFArb8rc3u0Am27oLtKEVKLEwyNe/9ywq
      EB85x3966iKp0Cw9YwsApFem6JlYvqVCopMX+V//9j/w7W99g3/+7rPkbmH5rPD0Zb7x4zPv
      eszy2Gs89pPzt1SH942a4udPPMH4qrlq5p3mufNjPPvmKM++OUo8fXsSgp05c4a/+Zu/2dgK
      ZGh5kqm1BeL0Qo5EssBrz77KM4MZHvnN30Qb+DG/mPPwO5/7PPurdF55swdrUS2ffPgEV958
      i4YKF5MpPw8daUNXFYqbD/GH//rj/PCf/o7uwR1oSgEtMEHryVP0v/oKIUXi1Mc+Sa1f4NUX
      fsHU/DRBWwdaLsrp50+TtpTw8MMfITFzlde7xqnbe5xmS47V+TmeeXIGX+txPtK5eQ6TeHCZ
      6rYmlmcCtJZ50fIp+ruvEs3pNLcfxq+HSRkCoahGQ6lAd/84nopmDu5p2TYpDG8X3/xFD+o1
      R9ie5nJ8t2EFndXVVb7whS+8Dz+AZGP/of10HHmQRz5yiKNHT7D72MM8fLwdweLi4JGjpMdf
      5/zYEpdee4HXe5Zoqnt7PZhUdJXxkQECGRcuLcAzTz1D3luN2yJSv3M/bf4cT75wnv4Xv8OC
      u5NHPnYcmwhnf/BtEiWt+HOTPHO2m+eeO82+kw9RV7KWMEkVHHzysyd56YnnNvHxGKwsr1DR
      vB9JWUbRNKZ6r+JqOsDRliLmI0liC+MMziXYtaMBBCttu9rRVgZZSJirQ94LNDU1ceHChY1b
      AFm2YOg6urFmHbJYLLDBEndvnX4Go3ofgmwlX1BBcPPwZ36DSu/bys2l44QTBX7v3/0Z4spl
      ypv38bEHjrI88DKnL4bZV2GgaSpzcwu0/mYzYm4FQYDFhUXkmhSO6j3c39SKfYeVN8+/zEre
      zaePuvAWF2OzWsDYvBdPL2QYH59BCKZJLy9RtPMwSsHGjnIPQkBCQECyOOjo6MBu0RkeHwVP
      KYqmks3mwbf52cxMNg/DMDh8+DDHjh3bWADO8gZqxXP87Omnic5M8NBv/yk+eYHMCy/yenc1
      +6vqSb38GpcGK1CyWdRMlmzuWn9NlpB/xahdWtvG8eNHEYGVFZAtFkQBdLVAOp0mk9HQdIP9
      x+/j+z95jNWKAopWy30P3c+PL45StKsGVzrO0vgCDl8Ryf458rTelgeUia1QsuMExzub0bMB
      zl2dYVeJzBvnXsOhBFFrS0AQEQQBMMgrCpqUJZPZflaU28H//ecfv77oYnXp5i+rq+s6Tz/9
      NPF4/N2tQGo+RyKZRrI58LqdCIZOOpmgIFjxue2kE3F02Y5DNkikFRx2K5LFhqrkcDhdiOKa
      CHQ1T7Zg4HTYEABNzZMrGLgcNgxdJR6LI1vtCJKM0y6TiMVBkpFkK26HlUQ8RkEX8Xg9GPks
      qYyC1enGaYVcAVwOmWQyh8ezOcuN6loBzZCwyGvOLUUpkE/HyGEhOdNHxL+HA3UekK1Iwtpz
      yuQKWG0WZNmGfI8NArajFSifzxONRk0z6K2SiS1zpXsAS1Eth/buxHKPveTvxnYUwC8xBWCy
      rQVgRoOabGtMAWyEmubFn/6MqWASgNDsAGOBFPP9vSwmbraG9fT1vsvF8gz2DHMrUVY9fb1s
      50Z5Kpzl6YHQ9e3qQnLTyzAMg5dffpm///u/N8OhNyIZWqG4vpLF2WWaSj2o+Rw5QUPKZpB0
      nUx0icvdQ7jKm+jc3UwmnWCw603iQjFHDuwisTRBz8gslS172d3oJxle4s1zAUrqd9PRVE5g
      aoihqWWaOg7TXOUjujRJ98gsq2md/ds4b5aiGsRyb88OKr4pJ9PmcOrUKR566CGzBVgfg+Xl
      ZapaDyJll8jrN/8Iqiayc28nRnSOpUiafCJGadsBymwJAuEsumRnf+d+YuPdhAtQ0CWOnHwA
      bb6buUQeyV5E58H9DPVeJpdcpX8qyqkHH6SmxLkF97u9EASBbDbLP/3TP5ktwHoYhSxjY1MI
      qymSS4uUtB/D9yvHzE2NkcROIhjH3api85dR4XOihJ2IhsLUyBi4vcTSUXI5cLp9WC0S1dUl
      BMJR5ubHsTldpKMpYkqa0rI6rJKERTYT594J/H4/X/7yl00BrEcmvkpx23FOHGhFzyxyrmca
      X9k7j8nmFGw+L4ahr5PsUCWnGPiKLdcnd+eSQfp7ugkG0xw9YuHKjIHXYkHTdZxOH8M9Vynk
      V5hfibPxHLMPP26bRK3Pen2/2LH5r6imaTz//PMUCgXTDLoeWiFHwbBgt67N9sqkc1gtIppg
      QVDzCFYbFLJEExnsDgd2hwOtkMfhcFDIKyBaUHNJklkVp8OGzeEin46RyuZx+Ypx22TSyRiZ
      PNjtVlwuJ0o6QTKrYnc68Dgd17zMd4btZgY1DINEIsHq6qopAJPtJ4AbMQfBJtsaUwAm2xpz
      ELwehSznzr1C3rBiINF54hQVHut7nweg5ZieDVHfXErP5XEO7Wvg0tgyR/fuuL11/rCwOgjz
      b729X9IGjQ9uejHRaJTHH3/cFMC6GBq2kgYePLiH7Hw352cjeOtEevtHsJXWs29HA8HVFSxa
      irhQQpVT4Wr/OLU799NQYsVqtyGgEY8nQVeJJ1PEVwII/jK8VggshSmvqdhwdfltTT4Jifm3
      9x3Ft6WYQCBAY2Oj2QXaiNDsMC+9+CIv94bZ31JKoaDT1L4HYXWWpWSW0d63mAzq1JRZuNo/
      w87du5nrfYtoNsvY+MJNplG7nKZ3aJF8OspMIGg++C1m9+7d1NXVmS3ARpQ2tHPiQAehmW5G
      xpcpLcyylNJIBRaR2w5i8VRxuHMHYmqJmcUlNArInpINH6itpBlp6C2Cy05K69r58ART39uY
      AtiAdGyVsXEbmUgMe3ENyXiesooqjOhaJgxBFNe+4s5iaoucFJWWIRsgbfhpF2mvcfDCYIbf
      fsRxh+7iHsTmBV/D2/vO0k0vwjAMRkdHuXLliukHWBddY3UlQEZRkW0uqipKUXMJVkIJ3G43
      Do8XTcnidrsBKORSBFZC2NxFlBe5SKYVPB47yXgWr8dOPK3g87jIRSfompK5/1Dj1t7fr7Dd
      /ACGYTA9PU0oFDIFcMfIRnn9yjgHjx/BJd9dHaDtJoAbMQVgsq0FYBojTLY15iB4PdQc5868
      TB4rFl8lJ/fUshiFptoPZpOOBxbI2H1UFb1Hio/kEsMJF+01vxp8vc2ITnE9L4rNA67yTb28
      YRicP3+e8+fPmwJYF12l4CjlE6fWApM1JYHLKaGkkuR0lfnFCLt31DE5PEhW9tPe1khkYYyZ
      5Rii1UlH+w5WZsYIpXV2dnRQyKSZCwRYmLKye98+7EaW8ZER0oaTvXt3YjFUpseGiAaXSJcd
      or1mi+9/q+n9LhjXZoVV7Ifdv73pRbS3t3PkyBGzC7QR8aUJXnrpJd64OkQ+tcLodJhUaIGz
      r17AW1LCXN8lko4K/FqQK2OLFJXX0tpYSSKaRDQKSJ4ymmuK6OsfAlR02UNTlZs3zl+loObx
      ltZS50lzdSzE3OBlYlIJTXUVZl7RO4AgCAiCwKOPPmq2ABvhrW7l4/cfAyAfnbj2V5n2A4eo
      K/Nzob/A/s5qHAUr05dXkHaUMzM5y4ET92NkFxnuHwBDJ2q42VVcRXlFKSXlPmyTb5EOLdEz
      MIdsJMh7ndhEmfa9tThiCmLQVMCdwOfz8aUvfckUwEYIsM6kFAFRFBEEqKtw0ts/ii8fwl3R
      zEz366RsNWSiq+TTMbxVDZRaFHpnEyDqhFeW0ENTiK4KUskwFY07cGWnmcyK+BwFBobGKcrN
      U3B0bMXt3l24K9/uAtn9m355TdN4/fXXcTqdphl0XXSNcDxFSdHaYFQvZIhnRdwWnYIo47RZ
      MXSVpbkZFNFFfW0l4cUpIqk8osVOQ301wYU5NKsXj8uG12lhcX6RvGinqbEeQc0wNzuPw1eE
      1eqmyC0xPzuLZHfj8pdS5LrFyNNNYruZQQ3DIBAIMDo6agrAZPsJ4EbMQbDJtsYUgMm2xhwE
      r4tBMrRE3+AoWVWgZfdBKtwK0ZSNmqpbcFKpaSbmE7Q0Vb0j7FmPzTFZqKCt7N2X/ClkEywG
      MzTWV/56t3EPEpx/k4XRp67vF1cdoqHjC5tahmEYdHV18cYbb5gCWA89n6GrZ4TOE6fw2QyS
      GY28EmFlMUQsvEB1Uxs+O8xOTpAx7LS0NJBenWMhmEC0OmhtqsPndYOusTQ3STit09jSgjMX
      Y3ouixIUaGppxilrTE1MomCjuaUZu6SxMDXJajSGaimlsX6rn8SdJxOfZXnqxev7omTZdAEA
      NDQ0sH//frMLtB65bBSrtxqvmKHr8mWWo2kwCqyGYvh9Fnp7xtDyGXTZjVuP0D8VxOHxU+J3
      sDgXADVG7/A8ul4gr8mUeKC3bxIDyOZ1vDaFS13D5HNpsHmw62mGJ+eZHe5mOStR4nebE2Zu
      I4IgYLfbefzxx00BrIckWtG0HKLNw77OJuZGF0Gw0NDcSk1dHQ5RJZcIMToyxOjEFIurURwu
      D6HAModOnuSXycw0JcnYyAgDI+MsLa6iC1BZW0998w5cWop4bO0aI+PjLIfjxLIF2ne0UFFR
      jsX8ZW4rbrebz3/+82YXaD2sTj+2XDeDU4uUu9IIlpsfUyK4StXOffhSEwykDOb7z5Nx1SHk
      k6jXPt9qYhVr1Q5aijJ09cUxDIFkLMRcPkbOXkRiJUxj+z7kyCTTWQO7oDE1O4+7ECSjbr4D
      6F5AtrpxeN4OhrLaN39SvKZpXLhwgZKSEtMPsBFaIcv0xAQpVaKppQ2nlCeXl/B4LETCSXwe
      K+Oj49h9JdjdPrToPCvxHKLVyc7WepIpldJiBzNjo6h2D167h3K/hZGpGTTBQVtbM1Yjy8jw
      BHZ/GV6PixKPjfHRMXAWU17sx+9z35F73W5+AMMwmJ2dpbe31xSAyfYTwI2YPU2TbY0pAJNt
      jSmA9VAVJucWAYPlqSGWk/mtrtG2ohAIUFha27Ro7LaVEw6HTSvQuugFVkMRav0Sg/NpHmiU
      iQWXCMYylFbVUeSWiYWjxONx7EUVlBfZiKxEiCVTFFfWUGQ3iGahyG0jHkvi8dhJKTrZaAhf
      VR12MyfiuxL4n/4K1LUlBZ2n7qf0v/3zTS9D0zSee+45swXYiPjKLOfe6mXPgX3IGERjMSRR
      p7+nj7ye47WXX0PRdUZ6eslpCc6/OYCASvely2Riy3SNBcBQ6evuo5AJ8crZV1mIZk0H113C
      1atXqa+vN1uAjXD6S3FqadLZPIbLYHl+jqQqEoylOKztpqK+jR2tbRRiITQDSqsaaG5tQU2u
      ksjq8Cuvur+6hYN7WrmDC7+YbEAymeTb3/42TU1NpgA2wmJzcWjfPs6+8hbeE+3kxUoOHyjj
      tTcvr7MmGCjZNPHwMoEY1DZZUWciRILLrERSANjt9ju67NG9jOh2X+8CiXb7pl/f7Xbzj//4
      j4CZGGt9tAKrsRTlJUWoqRArih0tNEUwb6O8yEVVdQXRUIqy8iKioVXcxRIvPnmR0sYKduze
      Q7HbwuxIP8GcTFlJCbWVHsJpKPe7tvrO1mU7+wFMAWwKCYaHkrTvvjfzmZgCMNnWbGcBmFYg
      k22NKYD10BRmFgOAQWhujOV4lrmFhVs8N8f01ALaba3gh5uUolzfNF2/LWUUCgXOnTtnWoHW
      RSsQWAlR45PpmYxw6mQ93aML2CUB0eGjxOcmlUri8XjIppNY7G6UXBo9ryA43JSVFSFgkIgE
      SWRUisrKcNksW31X9wyPvnkW7VrP/N8ePUmFx7vpZfT09NDT02O2ABuRDC/x+vluOg50YhEF
      ossLLIejdF/pIlvQuXTpAgCjA1eIZjUunnuevpEZClqa7gv9qKgszS8Sj67Q1T3C7fmOmXxQ
      jhw5woMPPmgKYCMsdicOi4BSWLNHF9c0sW/PHqpKXGj6zXYDyVHEseOH3k5qpeUJh0IsBQIs
      zwYwo4nuTkwBbIDd5efYfccYv3KJdOHm77euqeQycQKra8FadqeLdyz8El8g49/JiSN7sUvC
      us4zk/U51tDMiWuby7r5WfIMw0DTNFRVNccA6yLZaKytQrR6efC+DpYSeRpq6/j/27vXn6bO
      OIDj355zejm0ZeVSSxFaBAQFhyiXRTG6JS7G93uz7O/Y9m7xPzH+A75ZtsXJ4obKZUBBDBcd
      yKVDLSgtvfdc90JnXFYXlnDR8HySJk2bk9Pn5PxOnuf5/Z6nAHVHG3ErDj4+HmEs9oiWji58
      LolotAlsG9u2QFZwVLfSuDLG7Iqf0z2diBHAzl1q2ds/Fbdtm8HBQRYWFkQeYFdZOrMTI+T9
      x+g92fjBFL4d5jyACADhUAeAGAMIh5oIgHJMjSdrO0t8bW9tks6LOZ7dZJrGm5e1R4mwZDLJ
      9evXxSC4LFNjafVPmiMNABQLBVyqiqWVsBwKTtkmlUwhu72kX24gBVS8TgsdJ5KhUdJL6LZM
      VaUPy9TY3s7gUv14VZli0cLjlsnmC3i9PvRiAaeqiifRW+78+D326xs/3BDhVE/frp9jbm6O
      q1eviuu+E5P3RygCm8sLLD5N8jg2wuzSCitrzzABU8sSG58kU9SYHvqF6UeLTA4NkSjoPBwf
      5tHSMsP37pPMpRkde0Ax+ZwffvqZ7YJBbGJClE0cgIGBAQKBgAiA/0/nWQYG+nro6mhGNnLc
      H7yNJ9JJ0O9ErQxxtq+X7uYgmXyRbcvDuf4+eo55iaeceBwFNtIp2qMRXmw/x5IrxRTpAUgm
      k9y4cUMEwE7Itomm62wmNjBQcJo5UkWDfDaLpXgZ+PwyW/MxMvo/j5NkBUo5MkWd9USGgNdJ
      QxU8fJLjeGeEPycm8UZaDqZRh5ht29y6dYsrV66IadCyTI2p8WE20xq1De20HZH4/cEi1cEQ
      9ZEmajwGY6PjVITbaAq6kTwBVDtNfMvG59AJNNSjb66jVYZx5RNMTs1RHT1JR3MYPZtgIV6i
      qyPCfGyKaFc3XuVgn0Pv2zSoaRr8nTp3SA4kaXe30TBNk5s3b7K6uioCQHj/AmA/iS6QcKiJ
      ABAONREA5Zg6szNTpPKvRrWmkWVyZJK88e5DLKtEIrG1Tz9Q2C0iEVaOWWL9aRzNVUP3iQip
      lTn+iG/QeMbGZWkUNR2XW0Uiy93bU3Rd7KfSpbO6so7f50Z2uXEpDnQDXE4JXTNQnBKGCZau
      objd6KUihgWqqiJLH0rZ3P649u3XGK/3Beru7eWLL7/as3OJAHgHf20IPfkC3Wpk8VmJtrAK
      WCzPz7CR1UiXJPo7qllbX0OaqaT7TBNPl+fRjSTZkpvP+kMMzZhcPl/P+G9TnLkQ4c6vj1G9
      Kqe7Olman6aka7iqT9B/quGgm/teMU3zTQmEXWbx0W4SXaB3kSoIVBhsJZ9juKtxAdgWNjaF
      fI6XK3GUukZam1r55PxZfIpMQ8spBgYuEvZbmOVKWNQgn148h89pYuom+WKJ+NraPjdMeJsI
      gP/QGK5hejhGqLX51QeFLeI5D5cuXSBY4cREwrI0DN3694ovWcbSNUrZDKlcAYCqqiocwMtE
      HF99B+d7O1EcYrXwQRJdoHJkJ+FQLWqwhlB9huhHbl4cjVDhryHiW+Xu6AOOnmjHg5u29iOM
      DY3Se+E0oboaAGrrwihqPWH3PcYepmlsjqIofsJB+/X3UVYnYszlghw/9mHuJreXvvnu2pv3
      inNvC0X+AtlG2k/8H8/MAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg so2 and no2 ' width='192'>
      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
      /j+gp6ELRB8IkgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly Average of So2 &amp; No2 Between 1987-2000' width='192'>
      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
      /AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly Average of So2 &amp; No2 Between 2001-2015' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
